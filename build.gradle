allprojects{
	apply from: "${rootProject.projectDir}/libraries.gradle"
	/* turn off doclint java 8 */
	if (JavaVersion.current().isJava8Compatible()) {
	        tasks.withType(Javadoc) {
	            options.addStringOption('Xdoclint:none', '-quiet')
	        }
	}
	repositories {
		mavenLocal()
		mavenCentral()
    }
	
	/* Custimization part - e.g. when you got special repositories
	 * or an enterprise repo like artifactory or nexus */	 
	File f = new File(rootProject.projectDir,'custom_allprojects.gradle');
	if (f.exists()){
		apply from: "${rootProject.projectDir}/custom_allprojects.gradle"
	}
		
}

def doAutomateEclipseSetup = ['jenkins-editor-other'];

subprojects {
    apply plugin: 'java'
	
	if (doAutomateEclipseSetup.contains(project.name)){
		apply plugin: 'eclipse'
	}
	sourceSets {
		main {
			java {
		   		srcDir 'src/main/java'
		    }
		}	
	}
	group = "de.jcup.jenkinseditor" 
	version = "0.4.0"
	
	/* Setup UTF-8 for compile AND test compilation*/
	[ compileJava, compileTestJava ]*.options*.encoding = 'UTF-8'

	sourceCompatibility = JavaVersion.VERSION_1_8
		
	dependencies{
			
		testCompile library.junit
		testCompile library.mockito_all
	}
	
	 /* per default GRADLE stops the build if one single test fails ...*/
    test { 
        ignoreFailures = false 
    }
	
	task sourcesJar(type: Jar, dependsOn:classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}

	task javadocJar(type: Jar, dependsOn:javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

}



